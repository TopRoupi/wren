[n.global]
output = src/wren/git

[n.include]
$output/src/include
$output/src/vm
$output/src/optional

[n.prepare]
gitremote = "https://github.com/wren-lang/wren"
gitsparse = "src/*"
copy = "$output/src/include/wren.h=$output/src/vm/wren.h"
copy = "$output/src/include/wren.h=$output/src/include/libwren.h"

[libwren.h]
preprocess = true
defines = true
flags = "--cdecl --prefix:wren --nep1"

compile = "$output/src/vm"
compile.2 = "$output/src/optional"

[libwren.nim]
search = " Bool"
replace = " bool"

search.2 = "WrenVM* = wrenVM"
replace.2 = "WrenVM* {.bycopy.} = object"

search.3 = "WrenHandle* = wrenHandle"
replace.3 = "WrenHandle* {.bycopy.} = object"

search.4 = "WrenReallocateFn* = proc (memory: pointer; newSize: csize): pointer"
replace.4 = "WrenReallocateFn* = proc (memory: pointer; newSize: csize): pointer {.cdecl.}"

search.5 = "WrenForeignMethodFn* = proc (vm: ptr WrenVM)"
replace.5 = "WrenForeignMethodFn* = proc (vm: ptr WrenVM) {.cdecl.}"

search.6 = "WrenFinalizerFn* = proc (data: pointer)"
replace.6 = "WrenFinalizerFn* = proc (data: pointer) {.cdecl.}"

search.7 = "WrenLoadModuleFn* = proc (vm: ptr WrenVM; name: cstring): cstring"
replace.7 = "WrenLoadModuleFn* = proc (vm: ptr WrenVM; name: cstring): cstring {.cdecl.}"

search.8 = "WrenWriteFn* = proc (vm: ptr WrenVM; text: cstring)"
replace.8 = "WrenWriteFn* = proc (vm: ptr WrenVM; text: cstring) {.cdecl.}"

search.9 = "\"src/wren/git"
replace.9 = "sourcePath & \""
